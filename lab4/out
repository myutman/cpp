src/mergesort.c: In function ‘mergesort’:
src/mergesort.c:10:13: warning: incompatible implicit declaration of built-in function ‘malloc’ [enabled by default]
  void *an = malloc(num * size);
             ^
src/mergesort.c:16:12: warning: dereferencing ‘void *’ pointer [enabled by default]
    copy(&an[k += size], &base[(i++) * size], size);
            ^
src/mergesort.c:16:9: warning: taking address of expression of type ‘void’ [enabled by default]
    copy(&an[k += size], &base[(i++) * size], size);
         ^
src/mergesort.c:16:30: warning: dereferencing ‘void *’ pointer [enabled by default]
    copy(&an[k += size], &base[(i++) * size], size);
                              ^
src/mergesort.c:16:25: warning: taking address of expression of type ‘void’ [enabled by default]
    copy(&an[k += size], &base[(i++) * size], size);
                         ^
src/mergesort.c:18:12: warning: dereferencing ‘void *’ pointer [enabled by default]
    copy(&an[k += size], &base[(j++) * size], size);
            ^
src/mergesort.c:18:9: warning: taking address of expression of type ‘void’ [enabled by default]
    copy(&an[k += size], &base[(j++) * size], size);
         ^
src/mergesort.c:18:30: warning: dereferencing ‘void *’ pointer [enabled by default]
    copy(&an[k += size], &base[(j++) * size], size);
                              ^
src/mergesort.c:18:25: warning: taking address of expression of type ‘void’ [enabled by default]
    copy(&an[k += size], &base[(j++) * size], size);
                         ^
src/mergesort.c:21:13: warning: dereferencing ‘void *’ pointer [enabled by default]
   copy(&base[i], &an[i * num], size);
             ^
src/mergesort.c:21:8: warning: taking address of expression of type ‘void’ [enabled by default]
   copy(&base[i], &an[i * num], size);
        ^
src/mergesort.c:21:21: warning: dereferencing ‘void *’ pointer [enabled by default]
   copy(&base[i], &an[i * num], size);
                     ^
src/mergesort.c:21:18: warning: taking address of expression of type ‘void’ [enabled by default]
   copy(&base[i], &an[i * num], size);
                  ^
src/mergesort.c:22:2: warning: incompatible implicit declaration of built-in function ‘free’ [enabled by default]
  free(an);
  ^
src/ms_cli.c: In function ‘main’:
src/ms_cli.c:7:12: warning: incompatible implicit declaration of built-in function ‘malloc’ [enabled by default]
   int *a = malloc((argc - 1) * sizeof(int));
            ^
src/ms_cli.c:11:3: warning: passing argument 4 of ‘mergesort’ from incompatible pointer type [enabled by default]
   mergesort(a, argc - 1, sizeof(int), intcmp);
   ^
In file included from src/ms_cli.c:2:0:
src/../include/util.h:3:5: note: expected ‘int * (*)(const void *, const void *)’ but argument is of type ‘int (*)(int,  int)’
 int mergesort (void* base, size_t num, size_t size, int (*cmp(const void*, const void*)));
     ^
src/ms_cli.c:15:3: warning: incompatible implicit declaration of built-in function ‘free’ [enabled by default]
   free(a);
   ^
src/ms_cli.c:18:14: warning: incompatible implicit declaration of built-in function ‘malloc’ [enabled by default]
   char **a = malloc((argc - 1) * sizeof(char*));
              ^
src/ms_cli.c:22:3: warning: passing argument 4 of ‘mergesort’ from incompatible pointer type [enabled by default]
   mergesort(a, argc - 1, sizeof(char*), strcmp);
   ^
In file included from src/ms_cli.c:2:0:
src/../include/util.h:3:5: note: expected ‘int * (*)(const void *, const void *)’ but argument is of type ‘int (*)(const char *, const char *)’
 int mergesort (void* base, size_t num, size_t size, int (*cmp(const void*, const void*)));
     ^
src/ms_cli.c:26:3: warning: incompatible implicit declaration of built-in function ‘free’ [enabled by default]
   free(a);
   ^
src/ms_cli.c:29:13: warning: incompatible implicit declaration of built-in function ‘malloc’ [enabled by default]
   char *a = malloc((argc - 1) * sizeof(char));
             ^
src/ms_cli.c:33:3: warning: passing argument 4 of ‘mergesort’ from incompatible pointer type [enabled by default]
   mergesort(a, argc - 1, sizeof(char), charcmp);
   ^
In file included from src/ms_cli.c:2:0:
src/../include/util.h:3:5: note: expected ‘int * (*)(const void *, const void *)’ but argument is of type ‘int (*)(char,  char)’
 int mergesort (void* base, size_t num, size_t size, int (*cmp(const void*, const void*)));
     ^
src/ms_cli.c:37:3: warning: incompatible implicit declaration of built-in function ‘free’ [enabled by default]
   free(a);
   ^
In file included from src/util.c:1:0:
src/../include/util.h:3:28: error: unknown type name ‘size_t’
 int mergesort (void* base, size_t num, size_t size, int (*cmp(const void*, const void*)));
                            ^
src/../include/util.h:3:40: error: unknown type name ‘size_t’
 int mergesort (void* base, size_t num, size_t size, int (*cmp(const void*, const void*)));
                                        ^
src/../include/util.h:7:34: error: unknown type name ‘size_t’
 void copy(void *dest, void *src, size_t size);
                                  ^
src/util.c: In function ‘copy’:
src/util.c:5:2: error: ‘for’ loop initial declarations are only allowed in C99 mode
  for (int i = 0; i < size; i++)
  ^
src/util.c:5:2: note: use option -std=c99 or -std=gnu99 to compile your code
src/util.c: At top level:
src/util.c:9:5: error: conflicting types for ‘strcmp’
 int strcmp(const char** str1, const char** str2){
     ^
src/util.c:14:5: error: conflicting types for ‘intcmp’
 int intcmp(int* a, int* b){
     ^
In file included from src/util.c:1:0:
src/../include/util.h:5:5: note: previous declaration of ‘intcmp’ was here
 int intcmp(int, int);
     ^
src/util.c:18:5: error: conflicting types for ‘charcmp’
 int charcmp(char* a, char* b){
     ^
In file included from src/util.c:1:0:
src/../include/util.h:6:5: note: previous declaration of ‘charcmp’ was here
 int charcmp(char, char);
     ^
make: *** [util.o] Ошибка 1
